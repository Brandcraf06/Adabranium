plugins {
	id 'fabric-loom' version '0.6-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "${mod_version}+${minecraft_version}"
group = project.maven_group

// This field defines the Java version your mod target.
// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too.
def targetJavaVersion = 8

repositories {
	maven {
		name = "Fabric"
		url = "https://maven.fabricmc.net/"
	}
	maven {
		name = "Cotton"
		url = "https://server.bbkr.space/artifactory/libs-release/"
	}
	maven {
		name = "Jitpack"
		url = "https://jitpack.io"
	}
	jcenter()
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.

	// libcd
	modImplementation 'io.github.cottonmc:LibCD:3.0.3+1.16.3'
	include 'io.github.cottonmc:LibCD:3.0.3+1.16.3'

	// modmenu
	modCompile "io.github.prospector:modmenu:${project.mod_menu_version}"

	// config
	modApi("me.shedaniel.cloth:config-2:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	include "me.shedaniel.cloth:config-2:${project.cloth_config_version}"

	modApi("me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	include "me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}"
}

java {
	sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
	targetCompatibility = JavaVersion.toVersion(targetJavaVersion)

	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	if (JavaVersion.current().isJava9Compatible()) {
		it.options.release.set(targetJavaVersion)
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

   